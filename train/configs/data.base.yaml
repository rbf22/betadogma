seed: 42

gencode:
  enabled: true
  kwargs:
    fasta: ../../data/raw/genome/GRCh38.primary_assembly.genome.fa
    gtf:   ../../data/raw/gencode/gencode.v44.annotation.gtf
    out:   ../../data/cache/gencode_v44_structural_base
    window: 131072            # 128k windows
    stride: 65536             # 64k step
    bin_size: 1               # base-resolution labels to match NTEncoder
    chroms: "chr22"       # set "" to process all chr*
    max_shard_bases: 50000000

gtex:
  enabled: true
  kwargs:
    junctions: "../../data/raw/gtex/junctions/GTEx_junctions.gct.gz"  # GCT format junction counts
    gtf: "../../data/raw/gencode/gencode.v44.annotation.gtf"
    out: "../../data/cache/gtex_psi"
    chroms: "chr22"        # Filter to chromosome 22 only (confirmed exists in GTEx)
    min_count: 2           # ≥2 reads per junction (two-read coverage criteria)
    min_total: 10          # per-sample total junction count threshold (reduced for chr22)
    min_samples: 3         # require junction observed in ≥3 samples (reduced for chr22)

variants:
  enabled: true
  kwargs:
    vcf: "../../data/raw/variants/ALL.chr22_GRCh38.genotypes.vcf.gz"
    windows: "../../data/cache/gencode_v44_structural_base/*.parquet"  # Non-overlapping!
    out: "../../data/cache/variants_base"
    max_per_window: 100
    shard_size: 1000  # Small shards for memory management
    debug: true


overlapping_windows:
  enabled: true
  kwargs:
    base_windows: "../../data/cache/variants_base"
    out: "../../data/cache/variants_overlapping"
    stride: 65536

aggregate:
  enabled: true
  kwargs:
    # Your prepare_data module can merge/index these inputs as needed.
    input_dir:   ../../data/cache/gencode_v44_structural_base
    output_dir:  ../../data/processed/structural
    gtex_dir:    ../../data/cache/gtex_psi
    variant_dir: ../../data/cache/variants_overlapping
    max_per_window: 0  # No downsampling in second step
    # Add any extra switches your aggregator understands, e.g.:
    # write_index: true
    # split_by: "chrom"
    # keep_columns: ["chrom","start","end","seq","donor","acceptor","tss","polya"]

outputs:
  # Prefer asserting existence via globs (works for Parquet shard outputs).
  dir: ../../data/cache/gencode_v44_structural_base
  expect:
    - shard_*.parquet
    # If your aggregator writes additional outputs, add their patterns too, e.g.:
    # - ../../data/cache/gtex_psi/*.parquet
    # - ../../data/cache/variants_aligned/*.parquet